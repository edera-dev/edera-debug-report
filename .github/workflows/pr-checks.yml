name: Pull requests checks (lint + package)

on:
  pull_request:
    branches: ["**"]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: black + mypy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install linters
        run: |
          python -m pip install --upgrade pip
          pip install "black==24.*" "mypy==1.*"

      - name: black --check
        run: |
          black --version
          black --check debug_report.py

      - name: mypy
        run: |
          mypy --version
          # Pin a target version so annotations like `bytes | None` are understood
          mypy --python-version 3.11 debug_report.py

  package:
    name: package.sh sanity
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Install build deps
        run: |
          set -euxo pipefail
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            make \
            gcc \
            git \
            zlib1g-dev \
            python3 \
            python-is-python3 \
            tar \
            zstd
          python --version
          gcc --version
          make --version
          tar --version

      - name: Run package.sh
        run: |
          set -euxo pipefail
          chmod +x ./package.sh
          ./package.sh
          test -d out

      - name: List packaged tarball(s)
        run: |
          set -euo pipefail
          shopt -s nullglob
          files=(out/*.tar out/*.tgz out/*.tar.gz out/*.tar.zst)
          if (( ${#files[@]} == 0 )); then
            echo "No tarballs found in ./out"
            exit 1
          fi

          for f in "${files[@]}"; do
            echo "::group::Listing $f"
            case "$f" in
              *.tar)            tar -tvf "$f" ;;
              *.tar.gz|*.tgz)   tar -tzvf "$f" ;;
              *.tar.zst)        tar --zstd -tvf "$f" ;;
              *)                echo "Unknown extension for $f"; exit 2 ;;
            esac
            echo "::endgroup::"
          done
